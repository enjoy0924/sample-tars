<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.altas.erp.eds.dao.AccountConfigSettingsEntityMapper">
  <resultMap id="BaseResultMap" type="com.altas.erp.eds.entity.AccountConfigSettingsEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 05 20:29:43 CST 2018.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="module_account_asset" jdbcType="BIT" property="moduleAccountAsset" />
    <result column="write_uid" jdbcType="INTEGER" property="writeUid" />
    <result column="module_account_accountant" jdbcType="BIT" property="moduleAccountAccountant" />
    <result column="has_chart_of_accounts" jdbcType="BIT" property="hasChartOfAccounts" />
    <result column="create_uid" jdbcType="INTEGER" property="createUid" />
    <result column="complete_tax_set" jdbcType="BIT" property="completeTaxSet" />
    <result column="template_transfer_account_id" jdbcType="INTEGER" property="templateTransferAccountId" />
    <result column="module_account_sepa" jdbcType="BIT" property="moduleAccountSepa" />
    <result column="module_account_bank_statement_import_csv" jdbcType="BIT" property="moduleAccountBankStatementImportCsv" />
    <result column="module_account_budget" jdbcType="BIT" property="moduleAccountBudget" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="group_warning_account" jdbcType="INTEGER" property="groupWarningAccount" />
    <result column="group_multi_currency" jdbcType="BIT" property="groupMultiCurrency" />
    <result column="group_proforma_invoices" jdbcType="BIT" property="groupProformaInvoices" />
    <result column="module_account_reports" jdbcType="BIT" property="moduleAccountReports" />
    <result column="module_account_plaid" jdbcType="BIT" property="moduleAccountPlaid" />
    <result column="has_default_company" jdbcType="BIT" property="hasDefaultCompany" />
    <result column="purchase_tax_rate" jdbcType="DOUBLE" property="purchaseTaxRate" />
    <result column="module_account_bank_statement_import_ofx" jdbcType="BIT" property="moduleAccountBankStatementImportOfx" />
    <result column="module_l10n_us_check_printing" jdbcType="BIT" property="moduleL10nUsCheckPrinting" />
    <result column="default_purchase_tax_id" jdbcType="INTEGER" property="defaultPurchaseTaxId" />
    <result column="write_date" jdbcType="TIMESTAMP" property="writeDate" />
    <result column="sale_tax_rate" jdbcType="DOUBLE" property="saleTaxRate" />
    <result column="module_account_batch_deposit" jdbcType="BIT" property="moduleAccountBatchDeposit" />
    <result column="module_account_yodlee" jdbcType="BIT" property="moduleAccountYodlee" />
    <result column="module_account_tax_cash_basis" jdbcType="BIT" property="moduleAccountTaxCashBasis" />
    <result column="chart_template_id" jdbcType="INTEGER" property="chartTemplateId" />
    <result column="default_sale_tax_id" jdbcType="INTEGER" property="defaultSaleTaxId" />
    <result column="sale_tax_id" jdbcType="INTEGER" property="saleTaxId" />
    <result column="module_account_bank_statement_import_qif" jdbcType="BIT" property="moduleAccountBankStatementImportQif" />
    <result column="group_analytic_accounting" jdbcType="BIT" property="groupAnalyticAccounting" />
    <result column="module_account_deferred_revenue" jdbcType="BIT" property="moduleAccountDeferredRevenue" />
    <result column="module_account_reports_followup" jdbcType="BIT" property="moduleAccountReportsFollowup" />
    <result column="purchase_tax_id" jdbcType="INTEGER" property="purchaseTaxId" />
    <result column="group_analytic_account_for_purchases" jdbcType="BIT" property="groupAnalyticAccountForPurchases" />
    <result column="group_analytic_account_for_sales" jdbcType="BIT" property="groupAnalyticAccountForSales" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 05 20:29:43 CST 2018.
    -->
    id, create_date, module_account_asset, write_uid, module_account_accountant, has_chart_of_accounts, 
    create_uid, complete_tax_set, template_transfer_account_id, module_account_sepa, 
    module_account_bank_statement_import_csv, module_account_budget, company_id, group_warning_account, 
    group_multi_currency, group_proforma_invoices, module_account_reports, module_account_plaid, 
    has_default_company, purchase_tax_rate, module_account_bank_statement_import_ofx, 
    module_l10n_us_check_printing, default_purchase_tax_id, write_date, sale_tax_rate, 
    module_account_batch_deposit, module_account_yodlee, module_account_tax_cash_basis, 
    chart_template_id, default_sale_tax_id, sale_tax_id, module_account_bank_statement_import_qif, 
    group_analytic_accounting, module_account_deferred_revenue, module_account_reports_followup, 
    purchase_tax_id, group_analytic_account_for_purchases, group_analytic_account_for_sales
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 05 20:29:43 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from account_config_settings
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 05 20:29:43 CST 2018.
    -->
    delete from account_config_settings
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.altas.erp.eds.entity.AccountConfigSettingsEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 05 20:29:43 CST 2018.
    -->
    insert into account_config_settings (id, create_date, module_account_asset, 
      write_uid, module_account_accountant, has_chart_of_accounts, 
      create_uid, complete_tax_set, template_transfer_account_id, 
      module_account_sepa, module_account_bank_statement_import_csv, 
      module_account_budget, company_id, group_warning_account, 
      group_multi_currency, group_proforma_invoices, module_account_reports, 
      module_account_plaid, has_default_company, purchase_tax_rate, 
      module_account_bank_statement_import_ofx, module_l10n_us_check_printing, 
      default_purchase_tax_id, write_date, sale_tax_rate, 
      module_account_batch_deposit, module_account_yodlee, 
      module_account_tax_cash_basis, chart_template_id, 
      default_sale_tax_id, sale_tax_id, module_account_bank_statement_import_qif, 
      group_analytic_accounting, module_account_deferred_revenue, 
      module_account_reports_followup, purchase_tax_id, 
      group_analytic_account_for_purchases, group_analytic_account_for_sales
      )
    values (#{id,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{moduleAccountAsset,jdbcType=BIT}, 
      #{writeUid,jdbcType=INTEGER}, #{moduleAccountAccountant,jdbcType=BIT}, #{hasChartOfAccounts,jdbcType=BIT}, 
      #{createUid,jdbcType=INTEGER}, #{completeTaxSet,jdbcType=BIT}, #{templateTransferAccountId,jdbcType=INTEGER}, 
      #{moduleAccountSepa,jdbcType=BIT}, #{moduleAccountBankStatementImportCsv,jdbcType=BIT}, 
      #{moduleAccountBudget,jdbcType=BIT}, #{companyId,jdbcType=INTEGER}, #{groupWarningAccount,jdbcType=INTEGER}, 
      #{groupMultiCurrency,jdbcType=BIT}, #{groupProformaInvoices,jdbcType=BIT}, #{moduleAccountReports,jdbcType=BIT}, 
      #{moduleAccountPlaid,jdbcType=BIT}, #{hasDefaultCompany,jdbcType=BIT}, #{purchaseTaxRate,jdbcType=DOUBLE}, 
      #{moduleAccountBankStatementImportOfx,jdbcType=BIT}, #{moduleL10nUsCheckPrinting,jdbcType=BIT}, 
      #{defaultPurchaseTaxId,jdbcType=INTEGER}, #{writeDate,jdbcType=TIMESTAMP}, #{saleTaxRate,jdbcType=DOUBLE}, 
      #{moduleAccountBatchDeposit,jdbcType=BIT}, #{moduleAccountYodlee,jdbcType=BIT}, 
      #{moduleAccountTaxCashBasis,jdbcType=BIT}, #{chartTemplateId,jdbcType=INTEGER}, 
      #{defaultSaleTaxId,jdbcType=INTEGER}, #{saleTaxId,jdbcType=INTEGER}, #{moduleAccountBankStatementImportQif,jdbcType=BIT}, 
      #{groupAnalyticAccounting,jdbcType=BIT}, #{moduleAccountDeferredRevenue,jdbcType=BIT}, 
      #{moduleAccountReportsFollowup,jdbcType=BIT}, #{purchaseTaxId,jdbcType=INTEGER}, 
      #{groupAnalyticAccountForPurchases,jdbcType=BIT}, #{groupAnalyticAccountForSales,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.altas.erp.eds.entity.AccountConfigSettingsEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 05 20:29:43 CST 2018.
    -->
    insert into account_config_settings
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="moduleAccountAsset != null">
        module_account_asset,
      </if>
      <if test="writeUid != null">
        write_uid,
      </if>
      <if test="moduleAccountAccountant != null">
        module_account_accountant,
      </if>
      <if test="hasChartOfAccounts != null">
        has_chart_of_accounts,
      </if>
      <if test="createUid != null">
        create_uid,
      </if>
      <if test="completeTaxSet != null">
        complete_tax_set,
      </if>
      <if test="templateTransferAccountId != null">
        template_transfer_account_id,
      </if>
      <if test="moduleAccountSepa != null">
        module_account_sepa,
      </if>
      <if test="moduleAccountBankStatementImportCsv != null">
        module_account_bank_statement_import_csv,
      </if>
      <if test="moduleAccountBudget != null">
        module_account_budget,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="groupWarningAccount != null">
        group_warning_account,
      </if>
      <if test="groupMultiCurrency != null">
        group_multi_currency,
      </if>
      <if test="groupProformaInvoices != null">
        group_proforma_invoices,
      </if>
      <if test="moduleAccountReports != null">
        module_account_reports,
      </if>
      <if test="moduleAccountPlaid != null">
        module_account_plaid,
      </if>
      <if test="hasDefaultCompany != null">
        has_default_company,
      </if>
      <if test="purchaseTaxRate != null">
        purchase_tax_rate,
      </if>
      <if test="moduleAccountBankStatementImportOfx != null">
        module_account_bank_statement_import_ofx,
      </if>
      <if test="moduleL10nUsCheckPrinting != null">
        module_l10n_us_check_printing,
      </if>
      <if test="defaultPurchaseTaxId != null">
        default_purchase_tax_id,
      </if>
      <if test="writeDate != null">
        write_date,
      </if>
      <if test="saleTaxRate != null">
        sale_tax_rate,
      </if>
      <if test="moduleAccountBatchDeposit != null">
        module_account_batch_deposit,
      </if>
      <if test="moduleAccountYodlee != null">
        module_account_yodlee,
      </if>
      <if test="moduleAccountTaxCashBasis != null">
        module_account_tax_cash_basis,
      </if>
      <if test="chartTemplateId != null">
        chart_template_id,
      </if>
      <if test="defaultSaleTaxId != null">
        default_sale_tax_id,
      </if>
      <if test="saleTaxId != null">
        sale_tax_id,
      </if>
      <if test="moduleAccountBankStatementImportQif != null">
        module_account_bank_statement_import_qif,
      </if>
      <if test="groupAnalyticAccounting != null">
        group_analytic_accounting,
      </if>
      <if test="moduleAccountDeferredRevenue != null">
        module_account_deferred_revenue,
      </if>
      <if test="moduleAccountReportsFollowup != null">
        module_account_reports_followup,
      </if>
      <if test="purchaseTaxId != null">
        purchase_tax_id,
      </if>
      <if test="groupAnalyticAccountForPurchases != null">
        group_analytic_account_for_purchases,
      </if>
      <if test="groupAnalyticAccountForSales != null">
        group_analytic_account_for_sales,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="moduleAccountAsset != null">
        #{moduleAccountAsset,jdbcType=BIT},
      </if>
      <if test="writeUid != null">
        #{writeUid,jdbcType=INTEGER},
      </if>
      <if test="moduleAccountAccountant != null">
        #{moduleAccountAccountant,jdbcType=BIT},
      </if>
      <if test="hasChartOfAccounts != null">
        #{hasChartOfAccounts,jdbcType=BIT},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=INTEGER},
      </if>
      <if test="completeTaxSet != null">
        #{completeTaxSet,jdbcType=BIT},
      </if>
      <if test="templateTransferAccountId != null">
        #{templateTransferAccountId,jdbcType=INTEGER},
      </if>
      <if test="moduleAccountSepa != null">
        #{moduleAccountSepa,jdbcType=BIT},
      </if>
      <if test="moduleAccountBankStatementImportCsv != null">
        #{moduleAccountBankStatementImportCsv,jdbcType=BIT},
      </if>
      <if test="moduleAccountBudget != null">
        #{moduleAccountBudget,jdbcType=BIT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="groupWarningAccount != null">
        #{groupWarningAccount,jdbcType=INTEGER},
      </if>
      <if test="groupMultiCurrency != null">
        #{groupMultiCurrency,jdbcType=BIT},
      </if>
      <if test="groupProformaInvoices != null">
        #{groupProformaInvoices,jdbcType=BIT},
      </if>
      <if test="moduleAccountReports != null">
        #{moduleAccountReports,jdbcType=BIT},
      </if>
      <if test="moduleAccountPlaid != null">
        #{moduleAccountPlaid,jdbcType=BIT},
      </if>
      <if test="hasDefaultCompany != null">
        #{hasDefaultCompany,jdbcType=BIT},
      </if>
      <if test="purchaseTaxRate != null">
        #{purchaseTaxRate,jdbcType=DOUBLE},
      </if>
      <if test="moduleAccountBankStatementImportOfx != null">
        #{moduleAccountBankStatementImportOfx,jdbcType=BIT},
      </if>
      <if test="moduleL10nUsCheckPrinting != null">
        #{moduleL10nUsCheckPrinting,jdbcType=BIT},
      </if>
      <if test="defaultPurchaseTaxId != null">
        #{defaultPurchaseTaxId,jdbcType=INTEGER},
      </if>
      <if test="writeDate != null">
        #{writeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="saleTaxRate != null">
        #{saleTaxRate,jdbcType=DOUBLE},
      </if>
      <if test="moduleAccountBatchDeposit != null">
        #{moduleAccountBatchDeposit,jdbcType=BIT},
      </if>
      <if test="moduleAccountYodlee != null">
        #{moduleAccountYodlee,jdbcType=BIT},
      </if>
      <if test="moduleAccountTaxCashBasis != null">
        #{moduleAccountTaxCashBasis,jdbcType=BIT},
      </if>
      <if test="chartTemplateId != null">
        #{chartTemplateId,jdbcType=INTEGER},
      </if>
      <if test="defaultSaleTaxId != null">
        #{defaultSaleTaxId,jdbcType=INTEGER},
      </if>
      <if test="saleTaxId != null">
        #{saleTaxId,jdbcType=INTEGER},
      </if>
      <if test="moduleAccountBankStatementImportQif != null">
        #{moduleAccountBankStatementImportQif,jdbcType=BIT},
      </if>
      <if test="groupAnalyticAccounting != null">
        #{groupAnalyticAccounting,jdbcType=BIT},
      </if>
      <if test="moduleAccountDeferredRevenue != null">
        #{moduleAccountDeferredRevenue,jdbcType=BIT},
      </if>
      <if test="moduleAccountReportsFollowup != null">
        #{moduleAccountReportsFollowup,jdbcType=BIT},
      </if>
      <if test="purchaseTaxId != null">
        #{purchaseTaxId,jdbcType=INTEGER},
      </if>
      <if test="groupAnalyticAccountForPurchases != null">
        #{groupAnalyticAccountForPurchases,jdbcType=BIT},
      </if>
      <if test="groupAnalyticAccountForSales != null">
        #{groupAnalyticAccountForSales,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.altas.erp.eds.entity.AccountConfigSettingsEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 05 20:29:43 CST 2018.
    -->
    update account_config_settings
    <set>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="moduleAccountAsset != null">
        module_account_asset = #{moduleAccountAsset,jdbcType=BIT},
      </if>
      <if test="writeUid != null">
        write_uid = #{writeUid,jdbcType=INTEGER},
      </if>
      <if test="moduleAccountAccountant != null">
        module_account_accountant = #{moduleAccountAccountant,jdbcType=BIT},
      </if>
      <if test="hasChartOfAccounts != null">
        has_chart_of_accounts = #{hasChartOfAccounts,jdbcType=BIT},
      </if>
      <if test="createUid != null">
        create_uid = #{createUid,jdbcType=INTEGER},
      </if>
      <if test="completeTaxSet != null">
        complete_tax_set = #{completeTaxSet,jdbcType=BIT},
      </if>
      <if test="templateTransferAccountId != null">
        template_transfer_account_id = #{templateTransferAccountId,jdbcType=INTEGER},
      </if>
      <if test="moduleAccountSepa != null">
        module_account_sepa = #{moduleAccountSepa,jdbcType=BIT},
      </if>
      <if test="moduleAccountBankStatementImportCsv != null">
        module_account_bank_statement_import_csv = #{moduleAccountBankStatementImportCsv,jdbcType=BIT},
      </if>
      <if test="moduleAccountBudget != null">
        module_account_budget = #{moduleAccountBudget,jdbcType=BIT},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="groupWarningAccount != null">
        group_warning_account = #{groupWarningAccount,jdbcType=INTEGER},
      </if>
      <if test="groupMultiCurrency != null">
        group_multi_currency = #{groupMultiCurrency,jdbcType=BIT},
      </if>
      <if test="groupProformaInvoices != null">
        group_proforma_invoices = #{groupProformaInvoices,jdbcType=BIT},
      </if>
      <if test="moduleAccountReports != null">
        module_account_reports = #{moduleAccountReports,jdbcType=BIT},
      </if>
      <if test="moduleAccountPlaid != null">
        module_account_plaid = #{moduleAccountPlaid,jdbcType=BIT},
      </if>
      <if test="hasDefaultCompany != null">
        has_default_company = #{hasDefaultCompany,jdbcType=BIT},
      </if>
      <if test="purchaseTaxRate != null">
        purchase_tax_rate = #{purchaseTaxRate,jdbcType=DOUBLE},
      </if>
      <if test="moduleAccountBankStatementImportOfx != null">
        module_account_bank_statement_import_ofx = #{moduleAccountBankStatementImportOfx,jdbcType=BIT},
      </if>
      <if test="moduleL10nUsCheckPrinting != null">
        module_l10n_us_check_printing = #{moduleL10nUsCheckPrinting,jdbcType=BIT},
      </if>
      <if test="defaultPurchaseTaxId != null">
        default_purchase_tax_id = #{defaultPurchaseTaxId,jdbcType=INTEGER},
      </if>
      <if test="writeDate != null">
        write_date = #{writeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="saleTaxRate != null">
        sale_tax_rate = #{saleTaxRate,jdbcType=DOUBLE},
      </if>
      <if test="moduleAccountBatchDeposit != null">
        module_account_batch_deposit = #{moduleAccountBatchDeposit,jdbcType=BIT},
      </if>
      <if test="moduleAccountYodlee != null">
        module_account_yodlee = #{moduleAccountYodlee,jdbcType=BIT},
      </if>
      <if test="moduleAccountTaxCashBasis != null">
        module_account_tax_cash_basis = #{moduleAccountTaxCashBasis,jdbcType=BIT},
      </if>
      <if test="chartTemplateId != null">
        chart_template_id = #{chartTemplateId,jdbcType=INTEGER},
      </if>
      <if test="defaultSaleTaxId != null">
        default_sale_tax_id = #{defaultSaleTaxId,jdbcType=INTEGER},
      </if>
      <if test="saleTaxId != null">
        sale_tax_id = #{saleTaxId,jdbcType=INTEGER},
      </if>
      <if test="moduleAccountBankStatementImportQif != null">
        module_account_bank_statement_import_qif = #{moduleAccountBankStatementImportQif,jdbcType=BIT},
      </if>
      <if test="groupAnalyticAccounting != null">
        group_analytic_accounting = #{groupAnalyticAccounting,jdbcType=BIT},
      </if>
      <if test="moduleAccountDeferredRevenue != null">
        module_account_deferred_revenue = #{moduleAccountDeferredRevenue,jdbcType=BIT},
      </if>
      <if test="moduleAccountReportsFollowup != null">
        module_account_reports_followup = #{moduleAccountReportsFollowup,jdbcType=BIT},
      </if>
      <if test="purchaseTaxId != null">
        purchase_tax_id = #{purchaseTaxId,jdbcType=INTEGER},
      </if>
      <if test="groupAnalyticAccountForPurchases != null">
        group_analytic_account_for_purchases = #{groupAnalyticAccountForPurchases,jdbcType=BIT},
      </if>
      <if test="groupAnalyticAccountForSales != null">
        group_analytic_account_for_sales = #{groupAnalyticAccountForSales,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.altas.erp.eds.entity.AccountConfigSettingsEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 05 20:29:43 CST 2018.
    -->
    update account_config_settings
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      module_account_asset = #{moduleAccountAsset,jdbcType=BIT},
      write_uid = #{writeUid,jdbcType=INTEGER},
      module_account_accountant = #{moduleAccountAccountant,jdbcType=BIT},
      has_chart_of_accounts = #{hasChartOfAccounts,jdbcType=BIT},
      create_uid = #{createUid,jdbcType=INTEGER},
      complete_tax_set = #{completeTaxSet,jdbcType=BIT},
      template_transfer_account_id = #{templateTransferAccountId,jdbcType=INTEGER},
      module_account_sepa = #{moduleAccountSepa,jdbcType=BIT},
      module_account_bank_statement_import_csv = #{moduleAccountBankStatementImportCsv,jdbcType=BIT},
      module_account_budget = #{moduleAccountBudget,jdbcType=BIT},
      company_id = #{companyId,jdbcType=INTEGER},
      group_warning_account = #{groupWarningAccount,jdbcType=INTEGER},
      group_multi_currency = #{groupMultiCurrency,jdbcType=BIT},
      group_proforma_invoices = #{groupProformaInvoices,jdbcType=BIT},
      module_account_reports = #{moduleAccountReports,jdbcType=BIT},
      module_account_plaid = #{moduleAccountPlaid,jdbcType=BIT},
      has_default_company = #{hasDefaultCompany,jdbcType=BIT},
      purchase_tax_rate = #{purchaseTaxRate,jdbcType=DOUBLE},
      module_account_bank_statement_import_ofx = #{moduleAccountBankStatementImportOfx,jdbcType=BIT},
      module_l10n_us_check_printing = #{moduleL10nUsCheckPrinting,jdbcType=BIT},
      default_purchase_tax_id = #{defaultPurchaseTaxId,jdbcType=INTEGER},
      write_date = #{writeDate,jdbcType=TIMESTAMP},
      sale_tax_rate = #{saleTaxRate,jdbcType=DOUBLE},
      module_account_batch_deposit = #{moduleAccountBatchDeposit,jdbcType=BIT},
      module_account_yodlee = #{moduleAccountYodlee,jdbcType=BIT},
      module_account_tax_cash_basis = #{moduleAccountTaxCashBasis,jdbcType=BIT},
      chart_template_id = #{chartTemplateId,jdbcType=INTEGER},
      default_sale_tax_id = #{defaultSaleTaxId,jdbcType=INTEGER},
      sale_tax_id = #{saleTaxId,jdbcType=INTEGER},
      module_account_bank_statement_import_qif = #{moduleAccountBankStatementImportQif,jdbcType=BIT},
      group_analytic_accounting = #{groupAnalyticAccounting,jdbcType=BIT},
      module_account_deferred_revenue = #{moduleAccountDeferredRevenue,jdbcType=BIT},
      module_account_reports_followup = #{moduleAccountReportsFollowup,jdbcType=BIT},
      purchase_tax_id = #{purchaseTaxId,jdbcType=INTEGER},
      group_analytic_account_for_purchases = #{groupAnalyticAccountForPurchases,jdbcType=BIT},
      group_analytic_account_for_sales = #{groupAnalyticAccountForSales,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>